---
description: React error #185 infinite loop fix for SettingsPanel component
---

# React Error #185 Fix - SettingsPanel Infinite Loop

## Problem Description
React error #185 occurs when clicking the "Ayarlar" (Settings) button in the Dashboard. This error indicates an infinite loop caused by continuous `setState` calls that exceed React's maximum update depth.

## Root Cause Analysis
The infinite loop is caused by:

1. **Object Reference Issues**: `safeSettings` object is recreated on every render
2. **State Update Chain**: `onSettingsChange` calls create new object references
3. **Component Re-render Cycle**: Dashboard re-renders → SettingsPanel re-renders → infinite loop

## Current Implementation Issues

### SettingsPanel.tsx Problems:
- `safeSettings` object created without `useMemo` (lines 101-108)
- `setDatePreset` function uses `settings` instead of `safeSettings` (line 163-169)
- Multiple `onSettingsChange` calls that trigger re-renders

### Dashboard.tsx Problems:
- Complex conditional rendering logic for SettingsPanel (line 336)
- Settings state management causing cascading updates

## Required Fixes

### 1. Fix SettingsPanel.tsx
```typescript
// Add useMemo import
import React, { useState, useMemo } from 'react';

// Fix safeSettings with proper memoization
const safeSettings = useMemo(() => ({
  dateRange: {
    startDate: settings.dateRange?.startDate || '',
    endDate: settings.dateRange?.endDate || '',
  },
  conditionalRules: settings.conditionalRules || [],
  visibleColumns: settings.visibleColumns || ['installs', 'roas_d0', 'roas_d7'],
}), [settings.dateRange?.startDate, settings.dateRange?.endDate, settings.conditionalRules, settings.visibleColumns]);

// Fix setDatePreset function
const setDatePreset = (preset: string) => {
  // ... date calculation logic ...
  
  onSettingsChange({
    ...safeSettings, // Use safeSettings, not settings
    dateRange: {
      startDate,
      endDate,
    },
  });
};
```

### 2. Fix Dashboard.tsx
```typescript
// Simplify conditional rendering
{currentTab === 'overview' && (
  <SettingsPanel
    settings={settings}
    onSettingsChange={handleSettingsChange}
    isOpen={showSettings}
    onToggle={() => setShowSettings(!showSettings)}
    // ... other props
  />
)}
```

### 3. Additional Optimizations
- Use `useCallback` for event handlers
- Implement proper dependency arrays for `useMemo` and `useCallback`
- Consider using `useRef` for stable references

## Testing Steps
1. Navigate to Dashboard tab
2. Click "Ayarlar" button
3. Verify SettingsPanel opens without React error #185
4. Test all SettingsPanel functionality (date presets, conditional rules, column visibility)
5. Check browser console for any remaining errors

## Files to Modify
- [src/components/SettingsPanel.tsx](mdc:src/components/SettingsPanel.tsx)
- [src/components/Dashboard.tsx](mdc:src/components/Dashboard.tsx)

## Error Pattern
```
Error: Minified React error #185; visit https://react.dev/errors/185 for the full message or use the non-minified dev environment for full errors and additional helpful warnings.
    at go (index-BPX3Okr0.js:48:21307)
    at Yc (index-BPX3Okr0.js:48:20832)
    at ls (index-BPX3Okr0.js:48:44886)
    at Yh (index-BPX3Okr0.js:48:44514)
    at Fg (index-BPX3Okr0.js:49:34767)
```

## Deployment URL
- Production: https://ubiquitous-sherbet-b4f6bf.netlify.app/
- Current Status: SettingsPanel causes page crash with React error #185