---
description: CSV data handling and parsing patterns for campaign data
---

# CSV Data Handling Patterns

## Core Parser
The main CSV parsing logic is in [src/utils/csvParser.ts](mdc:src/utils/csvParser.ts) with the `parseCSV()` function.

## CSV Format Detection
The parser automatically detects different CSV formats:

```typescript
// Check format type based on headers
const isDetailedFormat = headers.includes('ecpi') && headers.includes('adjust_cost');
const isAzulaFormat = headers.includes('all_revenue') && !headers.includes('app');
const isBusFrenzyFormat = headers.includes('all_revenue') && headers.includes('cost') && headers.includes('roas_d0');
```

## Header Cleaning
The parser handles corrupted headers automatically:

```typescript
// Clean up first line if it has corrupted header
if (firstLine.startsWith('m app,')) {
  firstLine = firstLine.substring(2); // Remove 'm ' prefix
} else if (firstLine.startsWith('gönder app,')) {
  firstLine = firstLine.replace('gönder app,', 'app,'); // Fix corrupted header
}
```

## Flexible Column Mapping
The parser uses flexible column name matching:

```typescript
const getColumnIndex = (columnName: string): number => {
  // Direct match first
  let index = headers.indexOf(columnName);
  if (index >= 0) return index;
  
  // Flexible matching for different formats
  if (columnName === 'app') {
    const appVariants = ['m app', 'mobile app', 'app_name', 'application'];
    for (const variant of appVariants) {
      index = headers.indexOf(variant);
      if (index >= 0) return index;
    }
  }
  
  return -1;
};
```

## Ad Network Decoding
Campaign networks are automatically decoded using the `decodeAdNetwork()` function:

```typescript
// In parseCampaignNetwork function
case 'a':
  result.adnetwork = decodeAdNetwork(value) || 'Unknown';
  break;
```

## Data Validation
The parser includes data validation and error handling:

```typescript
// Validate required fields
if (!app || !installs || !campaignNetwork) {
  console.warn('Skipping invalid row:', row);
  continue;
}
```

## Critical Rules
- ✅ Always handle corrupted headers gracefully
- ✅ Use flexible column name matching
- ✅ Validate required fields before processing
- ✅ Apply ad network decoding to campaign_network field
- ✅ Handle different CSV formats automatically
- ✅ Log warnings for invalid rows instead of crashing