---
description: Ad network decoding implementation patterns and troubleshooting
---

# Ad Network Decoding Patterns

## Core Architecture
The ad network decoding system is implemented in [src/utils/csvParser.ts](mdc:src/utils/csvParser.ts) with the `decodeAdNetwork()` function.

## Critical Decoding Order
**IMPORTANT**: The order of checks in `decodeAdNetwork()` is crucial for correct decoding:

1. **UFVCL Prefix Check** (Ayet Studios) - Must be FIRST
2. **Exact Mappings** (S networks, Base64, PTSDK)
3. **Fluent Pattern Checks** - Must be BEFORE underscore splitting
4. **Underscore Splitting** - Must be AFTER Fluent checks
5. **Other Pattern Checks** (OfferToro, Lootably, etc.)

## Special Cases

### Ayet Studios (UFVCL Prefix)
```typescript
// Ayet Studios için özel durum - UFVCL ile başlayan tüm kodlar
if (cleanCode.startsWith('UFVCL')) {
  return 'Ayet Studios';
}
```
**Examples**: `UFVCLTE1NTN8`, `UFVCLTI4Mnx8`, `UFVCLTE0MTA4` → "Ayet Studios"

### Fluent Number Patterns
```typescript
// 2. Sayı + underscore + sayı (34631_5406, 45209_5406) - ÖNEMLİ: Bu önce kontrol edilmeli
if (/^\d+_\d+$/.test(cleanCode)) {
  return 'Fluent';
}
```
**Examples**: `34631_5406`, `45209_5406` → "Fluent"

## Common Issues and Solutions

### Issue: "Number_Number format not decoding"
**Root Cause**: Fluent checks happening AFTER underscore splitting
**Solution**: Move Fluent pattern checks BEFORE underscore splitting logic

### Issue: "UFVCL codes not recognized"
**Root Cause**: UFVCL check not at the beginning of function
**Solution**: Place UFVCL check as the FIRST check after input validation

## Mapping Sources
- **S Networks**: [Adnetworkler.csv](mdc:Adnetworkler.csv) - Lines 1-25
- **Base64 Codes**: [Adnetworkler.csv](mdc:Adnetworkler.csv) - Lines 26-184
- **PTSDK Codes**: [Adnetworkler.csv](mdc:Adnetworkler.csv) - Lines 74-124

## Testing Patterns
Always test new decoding rules with:
1. Exact match cases
2. Prefix/suffix variations
3. Edge cases with special characters
4. Order dependency (ensure earlier patterns don't interfere)

## Critical Rules
- ✅ UFVCL prefix check MUST be first
- ✅ Fluent number patterns MUST be before underscore splitting
- ✅ Test decoding order when adding new patterns
- ✅ Use case-insensitive matching for exact mappings
- ✅ Preserve original code if no match found