---
description: Country code parsing patterns and comprehensive ISO country code mapping for campaign data
---

# Country Code Parsing Patterns

## Comprehensive ISO 3166-1 Alpha-2 Mapping
The system now supports **209 country codes** with complete ISO 3166-1 Alpha-2 standard coverage.

## Implementation in [src/utils/csvParser.ts](mdc:src/utils/csvParser.ts)

### Country Mapping Object
```typescript
const countryMapping: Record<string, string> = {
  'US': 'United States', 'USA': 'United States', 'UK': 'United Kingdom', 'GB': 'Great Britain',
  'TR': 'Turkey', 'DE': 'Germany', 'FR': 'France', 'KR': 'South Korea', 'JP': 'Japan',
  'CN': 'China', 'IN': 'India', 'BR': 'Brazil', 'RU': 'Russia', 'CA': 'Canada', 'AU': 'Australia',
  'MX': 'Mexico', 'NL': 'Netherlands', 'IT': 'Italy', 'ES': 'Spain', 'BE': 'Belgium',
  'CH': 'Switzerland', 'AT': 'Austria', 'SE': 'Sweden', 'NO': 'Norway', 'DK': 'Denmark',
  'FI': 'Finland', 'PL': 'Poland', 'CZ': 'Czech Republic', 'HU': 'Hungary', 'RO': 'Romania',
  'BG': 'Bulgaria', 'GR': 'Greece', 'PT': 'Portugal', 'IE': 'Ireland', 'LU': 'Luxembourg',
  'MT': 'Malta', 'CY': 'Cyprus', 'EE': 'Estonia', 'LV': 'Latvia', 'LT': 'Lithuania',
  'SI': 'Slovenia', 'SK': 'Slovakia', 'HR': 'Croatia', 'UA': 'Ukraine', 'BY': 'Belarus',
  'MD': 'Moldova', 'GE': 'Georgia', 'AM': 'Armenia', 'AZ': 'Azerbaijan', 'KZ': 'Kazakhstan',
  'UZ': 'Uzbekistan', 'KG': 'Kyrgyzstan', 'TJ': 'Tajikistan', 'TM': 'Turkmenistan',
  'AF': 'Afghanistan', 'PK': 'Pakistan', 'BD': 'Bangladesh', 'LK': 'Sri Lanka', 'NP': 'Nepal',
  'BT': 'Bhutan', 'MV': 'Maldives', 'TW': 'Taiwan', 'HK': 'Hong Kong', 'MO': 'Macau',
  'KP': 'North Korea', 'MN': 'Mongolia', 'TH': 'Thailand', 'VN': 'Vietnam', 'LA': 'Laos',
  'KH': 'Cambodia', 'MY': 'Malaysia', 'SG': 'Singapore', 'ID': 'Indonesia', 'PH': 'Philippines',
  'BN': 'Brunei', 'MM': 'Myanmar', 'TL': 'East Timor', 'NZ': 'New Zealand', 'FJ': 'Fiji',
  'PG': 'Papua New Guinea', 'SB': 'Solomon Islands', 'VU': 'Vanuatu', 'NC': 'New Caledonia',
  'PF': 'French Polynesia', 'WS': 'Samoa', 'TO': 'Tonga', 'KI': 'Kiribati', 'TV': 'Tuvalu',
  'NR': 'Nauru', 'PW': 'Palau', 'FM': 'Micronesia', 'MH': 'Marshall Islands', 'GT': 'Guatemala',
  'BZ': 'Belize', 'SV': 'El Salvador', 'HN': 'Honduras', 'NI': 'Nicaragua', 'CR': 'Costa Rica',
  'PA': 'Panama', 'CU': 'Cuba', 'JM': 'Jamaica', 'HT': 'Haiti', 'DO': 'Dominican Republic',
  'PR': 'Puerto Rico', 'TT': 'Trinidad and Tobago', 'BB': 'Barbados', 'LC': 'Saint Lucia',
  'VC': 'Saint Vincent and the Grenadines', 'GD': 'Grenada', 'AG': 'Antigua and Barbuda',
  'KN': 'Saint Kitts and Nevis', 'DM': 'Dominica', 'BS': 'Bahamas', 'AR': 'Argentina',
  'CL': 'Chile', 'UY': 'Uruguay', 'PY': 'Paraguay', 'BO': 'Bolivia', 'PE': 'Peru',
  'EC': 'Ecuador', 'CO': 'Colombia', 'VE': 'Venezuela', 'GY': 'Guyana', 'SR': 'Suriname',
  'GF': 'French Guiana', 'ZA': 'South Africa', 'EG': 'Egypt', 'LY': 'Libya', 'TN': 'Tunisia',
  'DZ': 'Algeria', 'MA': 'Morocco', 'SD': 'Sudan', 'SS': 'South Sudan', 'ET': 'Ethiopia',
  'ER': 'Eritrea', 'DJ': 'Djibouti', 'SO': 'Somalia', 'KE': 'Kenya', 'UG': 'Uganda',
  'TZ': 'Tanzania', 'RW': 'Rwanda', 'BI': 'Burundi', 'MW': 'Malawi', 'ZM': 'Zambia',
  'ZW': 'Zimbabwe', 'BW': 'Botswana', 'NA': 'Namibia', 'SZ': 'Eswatini', 'LS': 'Lesotho',
  'MG': 'Madagascar', 'MU': 'Mauritius', 'SC': 'Seychelles', 'KM': 'Comoros', 'YT': 'Mayotte',
  'RE': 'Réunion', 'MZ': 'Mozambique', 'AO': 'Angola', 'CD': 'Democratic Republic of the Congo',
  'CG': 'Republic of the Congo', 'CF': 'Central African Republic', 'TD': 'Chad', 'NE': 'Niger',
  'NG': 'Nigeria', 'BJ': 'Benin', 'TG': 'Togo', 'GH': 'Ghana', 'BF': 'Burkina Faso',
  'ML': 'Mali', 'SN': 'Senegal', 'GM': 'Gambia', 'GW': 'Guinea-Bissau', 'GN': 'Guinea',
  'SL': 'Sierra Leone', 'LR': 'Liberia', 'CI': 'Ivory Coast', 'MR': 'Mauritania',
  'CV': 'Cape Verde', 'ST': 'São Tomé and Príncipe', 'GQ': 'Equatorial Guinea', 'GA': 'Gabon',
  'CM': 'Cameroon', 'SA': 'Saudi Arabia', 'AE': 'United Arab Emirates', 'QA': 'Qatar',
  'BH': 'Bahrain', 'KW': 'Kuwait', 'OM': 'Oman', 'YE': 'Yemen', 'IQ': 'Iraq', 'SY': 'Syria',
  'LB': 'Lebanon', 'JO': 'Jordan', 'IL': 'Israel', 'PS': 'Palestine', 'IR': 'Iran',
  'IS': 'Iceland', 'GL': 'Greenland', 'FO': 'Faroe Islands', 'SJ': 'Svalbard and Jan Mayen',
  'AD': 'Andorra', 'MC': 'Monaco', 'SM': 'San Marino', 'VA': 'Vatican City', 'LI': 'Liechtenstein',
  'AL': 'Albania', 'MK': 'North Macedonia', 'RS': 'Serbia', 'ME': 'Montenegro',
  'BA': 'Bosnia and Herzegovina', 'XK': 'Kosovo'
};
```

### Decode Logic
```typescript
result.country = countryMapping[part.toUpperCase()] || part.toUpperCase();
```

## Key Features

### 1. Complete Coverage
- **209 country codes** covering all ISO 3166-1 Alpha-2 standards
- No country code will be left undecoded

### 2. Special Cases
- **GB** → "Great Britain" (separate from UK)
- **UK** → "United Kingdom" 
- **USA** → "United States" (alternative to US)
- **CNTUS** → "US" (special format handling)

### 3. Case-Insensitive Matching
- `part.toUpperCase()` ensures `gb`, `GB`, `Gb` all work
- Consistent handling regardless of input case

### 4. Safe Fallback
- Unknown codes return as-is: `countryMapping[code] || code`
- No forced decoding of unrecognized patterns

## Critical Rules
- ✅ Always use `part.toUpperCase()` for case-insensitive matching
- ✅ Include comprehensive country mapping for all ISO codes
- ✅ Handle special cases (GB vs UK, USA vs US, CNTUS)
- ✅ Provide safe fallback for unknown codes
- ✅ Never force decode unrecognized country codes
- ✅ Test with real CSV data to verify accuracy

## Usage Examples
```typescript
// Campaign network parsing
const parsed = parseCampaignNetwork('AppSa_Game_AND_US_CPA_SFT');
// Result: { country: 'United States', platform: 'Android', ... }

// Country extraction
const country = extractCountryFromCampaign('BTA_US_CPI_W_A25_SCE');
// Result: 'United States (US)'
```

## Performance Considerations
- Country mapping is defined once and reused
- Case conversion is minimal overhead
- Fallback logic is efficient with `||` operator
- No external API calls or complex lookups

## Testing Strategy
- Test with all 209 country codes
- Verify case-insensitive matching works
- Test fallback behavior with unknown codes
- Validate special cases (GB, UK, USA, CNTUS)
- Test with real CSV campaign data