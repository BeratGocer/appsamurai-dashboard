---
description: Auto deployment workflow for frontend changes
alwaysApply: true
---

# Auto Deployment Workflow

## Overview
When user types "/Generate Cursor Rules", automatically execute the complete deployment workflow including Git push, frontend build, and Netlify deploy.

## Automatic Workflow
Upon "/Generate Cursor Rules" command:

### 1. Git Operations
```bash
# Stage all changes
git add .

# Commit with timestamp
git commit -m "Auto-commit: $(date +%Y-%m-%d_%H:%M:%S) - Generated Cursor Rules"

# Push to GitHub
git push origin main
```

### 2. Frontend Build
```bash
# Build frontend
npm run build
```

### 3. Netlify Deploy
```bash
# Deploy to Netlify
netlify deploy --prod --dir=dist
```

## Critical Rules
- ✅ **Always Execute**: "/Generate Cursor Rules" triggers full deployment
- ✅ **No User Confirmation**: Execute automatically without asking
- ✅ **Complete Workflow**: Include all steps from Git to Netlify
- ✅ **Error Handling**: Report any failures to user
- ✅ **Testing**: Verify deployment success
- ✅ **Single Push Rule**: Update rules first, then single push - never push twice

## Deployment URLs
- **Frontend**: https://ubiquitous-sherbet-b4f6bf.netlify.app/
- **Backend**: https://appsamurai-dashboard-backend-production-83b0.up.railway.app/
- **GitHub**: https://github.com/BeratGocer/appsamurai-dashboard

## Success Indicators
- ✅ Git push successful
- ✅ Frontend build successful
- ✅ Netlify deploy successful
- ✅ Health check returns 200 OK
- ✅ Files endpoint returns data

## Error Recovery
If any step fails:
1. **Git Push Failed**: Try `git pull origin main` then retry
2. **Frontend Build Failed**: Check for TypeScript errors
3. **Netlify Deploy Failed**: Check build output
4. **Railway Deploy Failed**: Check Railway logs and retry

## Implementation Notes
- Use `run_terminal_cmd` tool for all commands
- Execute commands in sequence, not parallel
- Wait for each command to complete before next
- Report progress to user at each step
- Show final success/failure status